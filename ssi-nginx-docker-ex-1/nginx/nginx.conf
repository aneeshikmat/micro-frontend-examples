worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Enable SSI (Server Side Includes) and sub_filter
    ssi on;
    ssi_silent_errors on;
    ssi_types text/html;

    # Enable sub_filter for HTML transformation
    sub_filter_once off;
    
    # Use Docker's internal DNS for service discovery
    resolver 127.0.0.11 valid=30s;
    
    # Set variables for upstream services to force DNS resolution at runtime
    # This prevents "host not found in upstream" errors during startup
    map $uri $header_upstream {
        default "header:7210";
    }
    
    map $uri $content_upstream {
        default "content:7211";
    }
    
    map $uri $footer_upstream {
        default "footer:7212";
    }

    server {
        listen       80;
        server_name  localhost;

        # Root directory for static files
        root   /usr/share/nginx/html;
        index  index.html;

        # Header micro-frontend
        location /header/ {
            set $upstream_header http://$header_upstream;
            proxy_pass $upstream_header/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            add_header Cache-Control no-cache;
            proxy_connect_timeout 5s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
        }

        # Content micro-frontend
        location /content/ {
            set $upstream_content http://$content_upstream;
            proxy_pass $upstream_content/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            add_header Cache-Control no-cache;
            proxy_connect_timeout 5s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
        }

        # Footer micro-frontend
        location /footer/ {
            set $upstream_footer http://$footer_upstream;
            proxy_pass $upstream_footer/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            add_header Cache-Control no-cache;
            proxy_connect_timeout 5s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
        }

        # For SSI includes, extract only the body content from micro-frontends
        location /ssi/header/ {
            set $upstream_header http://$header_upstream;
            proxy_pass $upstream_header/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # Extract only the content between <body> and </body> tags
            sub_filter '<body>' '';
            sub_filter '</body>' '';
            
            add_header Cache-Control no-cache;
            proxy_connect_timeout 5s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
        }

        location /ssi/content/ {
            set $upstream_content http://$content_upstream;
            proxy_pass $upstream_content/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # Extract only the content between <body> and </body> tags
            sub_filter '<body>' '';
            sub_filter '</body>' '';
            
            add_header Cache-Control no-cache;
            proxy_connect_timeout 5s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
        }

        location /ssi/footer/ {
            set $upstream_footer http://$footer_upstream;
            proxy_pass $upstream_footer/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # Extract only the content between <body> and </body> tags
            sub_filter '<body>' '';
            sub_filter '</body>' '';
            
            add_header Cache-Control no-cache;
            proxy_connect_timeout 5s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
        }

        # Main application
        location / {
            try_files $uri $uri/ =404;
            add_header Cache-Control no-cache;
        }

        # Error pages
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}